<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>kogane.com</title>
    <link>http://koganezawaryouta.github.io/</link>
    <description>Recent content on kogane.com</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>jp</language>
    <managingEditor>ryouta.koganezawa@gmail.com</managingEditor>
    <webMaster>ryouta.koganezawa@gmail.com</webMaster>
    <lastBuildDate>Mon, 25 Apr 2016 00:54:22 +0900</lastBuildDate>
    <atom:link href="http://koganezawaryouta.github.io/index.xml" rel="self" type="application/rss+xml" />
    
    <item>
      <title>atom_for_golang</title>
      <link>http://koganezawaryouta.github.io/atom_for_golang/</link>
      <pubDate>Mon, 25 Apr 2016 00:54:22 +0900</pubDate>
      <author>ryouta.koganezawa@gmail.com</author>
      <guid>http://koganezawaryouta.github.io/atom_for_golang/</guid>
      <description>

&lt;h1 id=&#34;tips-atom-editer-for-golang:b045b6c07713fe08c73c8fadc852e1b3&#34;&gt;Tips Atom editer for golang&lt;/h1&gt;

&lt;h2 id=&#34;linter:b045b6c07713fe08c73c8fadc852e1b3&#34;&gt;linter&lt;/h2&gt;

&lt;h3 id=&#34;install-atom-packages:b045b6c07713fe08c73c8fadc852e1b3&#34;&gt;install atom packages&lt;/h3&gt;

&lt;pre&gt;&lt;code&gt;apm install go-plus
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;このpackagesがかなりすごい。めっちゃオススメです。
go-plusを入れると自動的に下記パッケージも入る。linter, gofmt等はsaveしたタイミングで走る。&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;╰─$ apm list | grep go
├── go-to-line@0.30.0
├── language-go@0.42.0
├── autocomplete-go@1.0.6
├── builder-go@1.0.0
├── go-config@1.1.4
├── go-get@1.0.3
├── go-plus@4.1.0
├── gofmt@1.1.6
├── gometalinter-linter@1.1.0
├── gorename@1.0.2
├── navigator-godef@1.0.3
├── tester-go@1.0.4
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;golangの開発支援ツール群-基本go-plusから呼び出される:b045b6c07713fe08c73c8fadc852e1b3&#34;&gt;golangの開発支援ツール群（基本go-plusから呼び出される）&lt;/h3&gt;

&lt;p&gt;go-plusで使ってるライブラリーを入れ忘れてもgo-configのパッケージが検知してgo-getパッケージを使って自動で入れてくれる。&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ go get -v github.com/alecthomas/gometalinter
$ go get -v golang.org/x/tools/cmd/gorename
$ go get -v github.com/nsf/gocode
$ go get -v github.com/rogpeppe/godef
$ go get -v golang.org/x/tools/cmd/oracle
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;settings:b045b6c07713fe08c73c8fadc852e1b3&#34;&gt;Settings&lt;/h3&gt;

&lt;p&gt;golangのvendoringにglideを使ってる場合は、gometalinter起動時のパラメータに&amp;rdquo;&amp;ndash;vendor&amp;rdquo;をつける。
環境変数（GO15VENDOREXPERIMENT）の値を見てvendor配下を参照するようになる。
※ preferencesのsettingsからもgometalinterのパラメータ設定するとconfig.csonが壊れる。ちゃんと反映されないから自分でconfig.csonををいじる方が無難&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-~/.atom/config.cson&#34;&gt;&amp;quot;gometalinter-linter&amp;quot;: {
  &amp;quot;args&amp;quot;: [
    &amp;quot;--vendor&amp;quot;
  ]
}
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;gopath:b045b6c07713fe08c73c8fadc852e1b3&#34;&gt;gopath&lt;/h3&gt;

&lt;p&gt;プロジェクト単位でgopathを切り替える方法して、&amp;rsquo;.envrc&amp;rsquo;を使っている場合は、プロジェクトのカレントディレクトから
atomを起動しないとgo-plusで読み込んでいる各パッケージがちゃんとgopathを参照できなくて正常に動かないので注意！&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;cd /goプロジェクト
atom .
&lt;/code&gt;&lt;/pre&gt;
</description>
    </item>
    
    <item>
      <title>atom_for_golang</title>
      <link>http://koganezawaryouta.github.io/post/atom_for_golang/</link>
      <pubDate>Mon, 25 Apr 2016 00:54:22 +0900</pubDate>
      <author>ryouta.koganezawa@gmail.com</author>
      <guid>http://koganezawaryouta.github.io/post/atom_for_golang/</guid>
      <description>

&lt;h1 id=&#34;tips-atom-editer-for-golang:b045b6c07713fe08c73c8fadc852e1b3&#34;&gt;Tips Atom editer for golang&lt;/h1&gt;

&lt;h2 id=&#34;linter:b045b6c07713fe08c73c8fadc852e1b3&#34;&gt;linter&lt;/h2&gt;

&lt;h3 id=&#34;install-atom-packages:b045b6c07713fe08c73c8fadc852e1b3&#34;&gt;install atom packages&lt;/h3&gt;

&lt;pre&gt;&lt;code&gt;apm install go-plus
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;このpackagesがかなりすごい。めっちゃオススメです。
go-plusを入れると自動的に下記パッケージも入る。linter, gofmt等はsaveしたタイミングで走る。&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;╰─$ apm list | grep go
├── go-to-line@0.30.0
├── language-go@0.42.0
├── autocomplete-go@1.0.6
├── builder-go@1.0.0
├── go-config@1.1.4
├── go-get@1.0.3
├── go-plus@4.1.0
├── gofmt@1.1.6
├── gometalinter-linter@1.1.0
├── gorename@1.0.2
├── navigator-godef@1.0.3
├── tester-go@1.0.4
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;golangの開発支援ツール群-基本go-plusから呼び出される:b045b6c07713fe08c73c8fadc852e1b3&#34;&gt;golangの開発支援ツール群（基本go-plusから呼び出される）&lt;/h3&gt;

&lt;p&gt;go-plusで使ってるライブラリーを入れ忘れてもgo-configのパッケージが検知してgo-getパッケージを使って自動で入れてくれる。&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ go get -v github.com/alecthomas/gometalinter
$ go get -v golang.org/x/tools/cmd/gorename
$ go get -v github.com/nsf/gocode
$ go get -v github.com/rogpeppe/godef
$ go get -v golang.org/x/tools/cmd/oracle
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;settings:b045b6c07713fe08c73c8fadc852e1b3&#34;&gt;Settings&lt;/h3&gt;

&lt;p&gt;golangのvendoringにglideを使ってる場合は、gometalinter起動時のパラメータに&amp;rdquo;&amp;ndash;vendor&amp;rdquo;をつける。
環境変数（GO15VENDOREXPERIMENT）の値を見てvendor配下を参照するようになる。
※ preferencesのsettingsからもgometalinterのパラメータ設定するとconfig.csonが壊れる。ちゃんと反映されないから自分でconfig.csonををいじる方が無難&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-~/.atom/config.cson&#34;&gt;&amp;quot;gometalinter-linter&amp;quot;: {
  &amp;quot;args&amp;quot;: [
    &amp;quot;--vendor&amp;quot;
  ]
}
&lt;/code&gt;&lt;/pre&gt;
</description>
    </item>
    
    <item>
      <title>atom_for_rails</title>
      <link>http://koganezawaryouta.github.io/atom_for_rails/</link>
      <pubDate>Mon, 25 Apr 2016 00:32:22 +0900</pubDate>
      <author>ryouta.koganezawa@gmail.com</author>
      <guid>http://koganezawaryouta.github.io/atom_for_rails/</guid>
      <description>

&lt;h1 id=&#34;tips-atom-editer-for-rails:60a553ffa2744246318d8bc69f285513&#34;&gt;Tips Atom editer for rails&lt;/h1&gt;

&lt;h2 id=&#34;linter:60a553ffa2744246318d8bc69f285513&#34;&gt;linter&lt;/h2&gt;

&lt;h3 id=&#34;install:60a553ffa2744246318d8bc69f285513&#34;&gt;install&lt;/h3&gt;

&lt;pre&gt;&lt;code&gt;$ rbenv exec gem install rubocop
$ rbenv exec gem install haml-lint
$ apm install linter-rubocop
$ apm install linter-haml
$ apm install linter-ruby
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;settings:60a553ffa2744246318d8bc69f285513&#34;&gt;Settings&lt;/h3&gt;

&lt;pre&gt;&lt;code class=&#34;language-~/.atom/config.cson&#34;&gt;&#39;linter-rubocop&#39;:
  &#39;executablePath&#39;: rubocopのパス（rbenv which rubocop）
&#39;linter-haml&#39;:
  &#39;copyRubocopYml&#39;: true
  &#39;hamlLintExecutablePath&#39;: haml-lintのパス（rbenv which haml-lint）
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;yamlのloadでinvalid-byte-sequenceになる場合:60a553ffa2744246318d8bc69f285513&#34;&gt;yamlのloadでinvalid byte sequenceになる場合&lt;/h3&gt;

&lt;p&gt;下記を追加&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-~/.atom/packages/linter-rubocop/index.coffee&#34;&gt;process.env.LANG = &#39;ja_JP.UTF-8&#39;
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&#34;rubocop-auto-correct-rubocop-aの自動化:60a553ffa2744246318d8bc69f285513&#34;&gt;rubocop-auto-correct(rubocop -aの自動化)&lt;/h2&gt;

&lt;h3 id=&#34;install-1:60a553ffa2744246318d8bc69f285513&#34;&gt;install&lt;/h3&gt;

&lt;pre&gt;&lt;code&gt;$ apm install rubocop-auto-correct
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&#34;haml-syntax-highlighting:60a553ffa2744246318d8bc69f285513&#34;&gt;Haml Syntax highlighting&lt;/h2&gt;

&lt;h3 id=&#34;install-2:60a553ffa2744246318d8bc69f285513&#34;&gt;install&lt;/h3&gt;

&lt;pre&gt;&lt;code&gt;$ apm install language-haml
&lt;/code&gt;&lt;/pre&gt;
</description>
    </item>
    
    <item>
      <title>atom_for_rails</title>
      <link>http://koganezawaryouta.github.io/post/atom_for_rails/</link>
      <pubDate>Mon, 25 Apr 2016 00:32:22 +0900</pubDate>
      <author>ryouta.koganezawa@gmail.com</author>
      <guid>http://koganezawaryouta.github.io/post/atom_for_rails/</guid>
      <description>

&lt;h1 id=&#34;tips-atom-editer-for-rails:60a553ffa2744246318d8bc69f285513&#34;&gt;Tips Atom editer for rails&lt;/h1&gt;

&lt;h2 id=&#34;linter:60a553ffa2744246318d8bc69f285513&#34;&gt;linter&lt;/h2&gt;

&lt;h3 id=&#34;install:60a553ffa2744246318d8bc69f285513&#34;&gt;install&lt;/h3&gt;

&lt;pre&gt;&lt;code&gt;$ rbenv exec gem install rubocop
$ rbenv exec gem install haml-lint
$ apm install linter-rubocop
$ apm install linter-haml
$ apm install linter-ruby
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;settings:60a553ffa2744246318d8bc69f285513&#34;&gt;Settings&lt;/h3&gt;

&lt;pre&gt;&lt;code class=&#34;language-~/.atom/config.cson&#34;&gt;&#39;linter-rubocop&#39;:
  &#39;executablePath&#39;: rubocopのパス（rbenv which rubocop）
&#39;linter-haml&#39;:
  &#39;copyRubocopYml&#39;: true
  &#39;hamlLintExecutablePath&#39;: haml-lintのパス（rbenv which haml-lint）
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;yamlのloadでinvalid-byte-sequenceになる場合:60a553ffa2744246318d8bc69f285513&#34;&gt;yamlのloadでinvalid byte sequenceになる場合&lt;/h3&gt;

&lt;p&gt;下記を追加&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-~/.atom/packages/linter-rubocop/index.coffee&#34;&gt;process.env.LANG = &#39;ja_JP.UTF-8&#39;
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&#34;rubocop-auto-correct-rubocop-aの自動化:60a553ffa2744246318d8bc69f285513&#34;&gt;rubocop-auto-correct(rubocop -aの自動化)&lt;/h2&gt;

&lt;h3 id=&#34;install-1:60a553ffa2744246318d8bc69f285513&#34;&gt;install&lt;/h3&gt;

&lt;pre&gt;&lt;code&gt;$ apm install rubocop-auto-correct
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&#34;haml-syntax-highlighting:60a553ffa2744246318d8bc69f285513&#34;&gt;Haml Syntax highlighting&lt;/h2&gt;

&lt;h3 id=&#34;install-2:60a553ffa2744246318d8bc69f285513&#34;&gt;install&lt;/h3&gt;

&lt;pre&gt;&lt;code&gt;$ apm install language-haml
&lt;/code&gt;&lt;/pre&gt;
</description>
    </item>
    
  </channel>
</rss>